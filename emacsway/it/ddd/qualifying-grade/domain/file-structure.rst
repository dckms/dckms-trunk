:canonical-base-url: https://dckms.github.io/system-architecture

.. index::
   single: Encapsulation; in Golang
   :name: emacsway-golang-domain-file-structure

==================================
Файловая структура Доменной модели
==================================

.. sectionauthor:: Ivan Zakrevsky

О причинах образования такой файловой структуры.

.. contents:: Содержание

Зачем в каждом Bounded Context директория internal?
    Доменная модель должна быть инкапсулирована.
    Другим Bounded Contexts должны быть доступны только CQRS-Commands и Public Domain Events (Integration Events).

Почему агрегаты в разных директориях?
    Причины две:

    1. Чтобы подчеркнуть High Cohesion, см. главу "Chapter Five. A Model Expressed in Software :: Modules" книги "Domain-Driven Design: Tackling Complexity in the Heart of Software" by Eric Evans.
    2. В Golang это необходимо для реализации :ref:`инкапсуляции Агрегата <emacsway-golang-encapsulation>`, чтобы ограничить доступ к защищенным атрибутам Агрегата извне.

Почему Сущности Агрегатов выделены в отдельные директорию?
    Чтобы логически выделить связанные этой Сущностью объекты.
    Не очень удобно смотреть винегрет вложенных объектов различных Сущностей, поскольку они нерелевантны в момент рассмотрения и повышают когнитивную нагрузку.
    Впрочем, это решение является пока что экспериментальным и не окончательным, но оно предопределяет последующие решения.

Почему в директории Агрегата есть директория с его названием?
    Для реализации ациклического графа зависимостей и исключения циклических импортов.
    Например, Агрегат может быть осведомлен о своей Сущности, а Сущность может быть осведомлена об Объекте-значении Агрегата.
    По этой причине все Объекты-значения Агрегата выделены в отдельную директорию.
    Иначе пришлось бы абсолютно все Cущности и Объекты-значения Агрегата разметить плоским списком в одной директории.

Почему отдельная директория для интерфейсов?
    Интерфейсы используются крайне редко в доменной модели, за исключением, разве что, интерфейсов экспортеров и интерфейсов SeedWork.
    Причина выделения их в отдельную директорию заключается также в реализации ациклического графа зависимостей и исключения циклических импортов, поскольку интерфейсы являются эффективным средством разрешения циклических импортов ввиду того, что они не тащат за собой всю реализацию с ее зависимостями.
    Более того, отдельная директория интерфейсов позволяет быстро их отыскать, исключив из рассмотрения детали реализации, что является важным, поскольку интерфейсы являются ключевым инструментом управления зависимостями.

